(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();const B="modulepreload",C=function(a){return"/math-royale/"+a},w={},x=function(t,e,s){let i=Promise.resolve();if(e&&e.length>0){document.getElementsByTagName("link");const n=document.querySelector("meta[property=csp-nonce]"),o=(n==null?void 0:n.nonce)||(n==null?void 0:n.getAttribute("nonce"));i=Promise.allSettled(e.map(u=>{if(u=C(u),u in w)return;w[u]=!0;const c=u.endsWith(".css"),m=c?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${u}"]${m}`))return;const h=document.createElement("link");if(h.rel=c?"stylesheet":B,c||(h.as="script"),h.crossOrigin="",h.href=u,o&&h.setAttribute("nonce",o),document.head.appendChild(h),c)return new Promise((T,L)=>{h.addEventListener("load",T),h.addEventListener("error",()=>L(new Error(`Unable to preload CSS for ${u}`)))})}))}function r(n){const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=n,window.dispatchEvent(o),!o.defaultPrevented)throw n}return i.then(n=>{for(const o of n||[])o.status==="rejected"&&r(o.reason);return t().catch(r)})},g={BASIC:"basic",DECIMAL:"decimal",PERCENTAGE:"percentage",PERCENTAGE_CHANGE:"percentage_change"},q={basic:.35,decimal:.3,percentage:.2,percentage_change:.15};function d(a,t){return Math.floor(Math.random()*(t-a+1))+a}function v(a){return a[Math.floor(Math.random()*a.length)]}function N(a){const t=Object.entries(a),e=t.reduce((i,[r,n])=>i+n,0);let s=Math.random()*e;for(const[i,r]of t)if(s-=r,s<=0)return i;return t[t.length-1][0]}function f(a){return Number.isInteger(a)?a.toString():parseFloat(a.toPrecision(12)).toString()}function b(a){return parseFloat(a.toPrecision(12))}function y(a=[0,0]){const t=d(1,13),e=d(1,13),s=d(a[0],a[1]),i=d(a[0],a[1]),r=t*Math.pow(10,s),n=e*Math.pow(10,i),o=r*n;return{question:`${f(r)} × ${f(n)}`,answer:b(o),type:s===0&&i===0?g.BASIC:g.DECIMAL,metadata:{base:[t,e],shifts:[s,i],operation:"multiply"}}}function P(a=[0,1]){const e=v([1,2,3,4,5,6,7,8,9,10,11,12,13,20,30,40,50,60,70,80,90,100,110,120,130]),s=d(1,13),i=d(a[0],a[1]),r=s*Math.pow(10,i),n=e/100*r;return{question:`What is ${f(e)}% of ${f(r)}?`,answer:b(n),type:g.PERCENTAGE,metadata:{percentage:e,base:s,shift:i,operation:"percentage"}}}function Q(){const a=Math.random()<.5;let t;a?t=v([10,20,30]):t=d(1,9)*10;const e=d(1,13),s=Math.random()<.5?0:1,i=e*Math.pow(10,s),r=a?1+t/100:1-t/100,n=i*r;return{question:`What is ${t}% ${a?"more":"less"} than ${f(i)}?`,answer:b(n),type:g.PERCENTAGE_CHANGE,metadata:{base:e,shift:s,percentage:t,isIncrease:a,operation:"percentage_change"}}}function E(a={}){const{weights:t=q,decimalShiftRange:e=[-2,2]}=a;switch(N(t)){case"basic":return y([0,0]);case"decimal":return y(e);case"percentage":return P();case"percentage_change":return Q();default:return y([0,0])}}class M{constructor(){this.reset()}reset(){this.questions=[],this.currentQuestion=null,this.questionStartTime=null,this.sessionStartTime=null,this.currentStreak=0,this.bestStreak=0,this.isActive=!1,this.isPausedState=!1}start(){this.reset(),this.isActive=!0,this.sessionStartTime=Date.now()}startQuestion(t){this.isActive||this.start(),this.currentQuestion={...t,startTime:Date.now(),userAnswer:null,isCorrect:null,responseTime:null},this.questionStartTime=Date.now()}submitAnswer(t){if(!this.currentQuestion)throw new Error("No question is currently active");const e=Date.now()-this.questionStartTime,s=parseFloat(t),i=Math.abs(s-this.currentQuestion.answer)<.01;this.currentQuestion.userAnswer=s,this.currentQuestion.isCorrect=i,this.currentQuestion.responseTime=e,this.questions.push({...this.currentQuestion}),i?(this.currentStreak++,this.bestStreak=Math.max(this.bestStreak,this.currentStreak)):this.currentStreak=0;const r={isCorrect:i,correctAnswer:this.currentQuestion.answer,responseTime:e};return this.currentQuestion=null,this.questionStartTime=null,r}getStatistics(){const t=this.questions.length;if(t===0)return{totalQuestions:0,correctAnswers:0,accuracy:0,averageTime:0,currentStreak:0,bestStreak:0,sessionDuration:0,questionsByType:{},accuracyByType:{}};const e=this.questions.filter(c=>c.isCorrect).length,s=e/t*100,r=this.questions.reduce((c,m)=>c+m.responseTime,0)/t,n={},o={};this.questions.forEach(c=>{n[c.type]||(n[c.type]=0,o[c.type]={correct:0,total:0}),n[c.type]++,o[c.type].total++,c.isCorrect&&o[c.type].correct++}),Object.keys(o).forEach(c=>{const{correct:m,total:h}=o[c];o[c]=h>0?m/h*100:0});const u=this.sessionStartTime?Date.now()-this.sessionStartTime:0;return{totalQuestions:t,correctAnswers:e,accuracy:Math.round(s*10)/10,averageTime:Math.round(r/100)/10,currentStreak:this.currentStreak,bestStreak:this.bestStreak,sessionDuration:u,questionsByType:n,accuracyByType:o}}getHistory(){return[...this.questions]}getRecentQuestions(t=5){return this.questions.slice(-t)}isSessionActive(){return this.isActive}pause(){this.isActive&&(this.isPausedState=!0)}resume(){this.isActive&&this.isPausedState&&(this.isPausedState=!1)}isPaused(){return this.isPausedState}end(){return this.isActive=!1,this.isPausedState=!1,this.getStatistics()}getPerformanceTrend(t=10){if(this.questions.length<t)return null;const s=this.questions.slice(-t).filter(o=>o.isCorrect).length/t*100,i=this.questions.slice(-t*2,-t);if(i.length<t)return{trend:"stable",recentAccuracy:s};const r=i.filter(o=>o.isCorrect).length/t*100;let n="stable";return s>r+10?n="improving":s<r-10&&(n="declining"),{trend:n,recentAccuracy:Math.round(s),olderAccuracy:Math.round(r)}}exportData(){return{questions:this.questions,currentStreak:this.currentStreak,bestStreak:this.bestStreak,sessionStartTime:this.sessionStartTime,isActive:this.isActive}}importData(t){this.questions=t.questions||[],this.currentStreak=t.currentStreak||0,this.bestStreak=t.bestStreak||0,this.sessionStartTime=t.sessionStartTime||null,this.isActive=t.isActive||!1,this.currentQuestion=null,this.questionStartTime=null}}const R=new M;class A{constructor(){this.initializeElements(),this.feedbackTimeout=null}initializeElements(){const t=typeof document<"u"?document:globalThis.document;if(!t){console.warn("Document not available for UIController");return}this.questionText=t.getElementById("questionText"),this.questionDisplay=t.getElementById("questionDisplay"),this.answerInput=t.getElementById("answerInput"),this.feedback=t.getElementById("feedback"),this.questionsCount=t.getElementById("questionsCount"),this.accuracyRate=t.getElementById("accuracyRate"),this.avgTime=t.getElementById("avgTime"),this.currentStreak=t.getElementById("currentStreak"),this.startBtn=t.getElementById("startBtn"),this.resetBtn=t.getElementById("resetBtn");const s=["questionText","answerInput","feedback","questionsCount","accuracyRate","avgTime","currentStreak","startBtn","resetBtn"].filter(i=>!t.getElementById(i));s.length>0&&console.error("Missing required elements:",s)}displayQuestion(t){if(!t||!t.question){console.error("Invalid question object:",t);return}this.questionText.textContent=t.question,this.answerInput.value="",this.answerInput.disabled=!1,this.answerInput.focus()}showFeedback(t,e=null){this.feedbackTimeout&&clearTimeout(this.feedbackTimeout),this.feedback.className="feedback",t?(this.feedback.textContent="✓ Correct!",this.feedback.classList.add("feedback-correct"),this.questionDisplay.classList.add("pulse"),setTimeout(()=>{this.questionDisplay.classList.remove("pulse")},600)):(this.feedback.textContent=`✗ Incorrect. Answer: ${e}`,this.feedback.classList.add("feedback-incorrect"),this.answerInput.classList.add("shake"),setTimeout(()=>{this.answerInput.classList.remove("shake")},300)),this.feedbackTimeout=setTimeout(()=>{this.clearFeedback()},t?4e3:5e3)}clearFeedback(){this.feedback.textContent="",this.feedback.className="feedback",this.feedbackTimeout&&(clearTimeout(this.feedbackTimeout),this.feedbackTimeout=null)}updateStatistics(t){t&&(this.animateValue(this.questionsCount,t.totalQuestions),this.animateValue(this.accuracyRate,`${t.accuracy}%`),this.animateValue(this.avgTime,`${t.averageTime}s`),this.animateValue(this.currentStreak,t.currentStreak),t.currentStreak>0&&t.currentStreak%5===0&&this.celebrateStreak(t.currentStreak))}animateValue(t,e){t.textContent!==e.toString()&&(t.style.transform="scale(1.2)",t.textContent=e,setTimeout(()=>{t.style.transform="scale(1)"},200))}celebrateStreak(t){const e=this.currentStreak.parentElement;e.classList.add("pulse"),this.feedback.textContent||(this.feedback.textContent=`🔥 ${t} streak!`,this.feedback.className="feedback feedback-correct",setTimeout(()=>{this.feedback.textContent===`🔥 ${t} streak!`&&this.clearFeedback()},2e3)),setTimeout(()=>{e.classList.remove("pulse")},600)}setGameActive(t){t?(this.startBtn.textContent="Next Question",this.startBtn.classList.add("btn-active"),this.answerInput.disabled=!1,this.resetBtn.disabled=!1):(this.startBtn.textContent="Start Practice",this.startBtn.classList.remove("btn-active"),this.answerInput.disabled=!0,this.answerInput.value="",this.questionText.textContent="Press Start to begin!",this.clearFeedback())}reset(){this.setGameActive(!1),this.clearFeedback(),this.questionsCount.textContent="0",this.accuracyRate.textContent="--%",this.avgTime.textContent="--s",this.currentStreak.textContent="0",document.querySelectorAll(".pulse, .shake").forEach(e=>{e.classList.remove("pulse","shake")})}getAnswer(){return this.answerInput?this.answerInput.value.trim():""}clearAnswer(){this.answerInput&&(this.answerInput.value="",this.answerInput.focus())}showLoading(){this.questionText&&(this.questionText.classList.add("loading"),this.questionText.textContent="")}hideLoading(){this.questionText&&this.questionText.classList.remove("loading")}showError(t){this.feedback.textContent=`⚠️ ${t}`,this.feedback.className="feedback feedback-incorrect"}on(t,e,s){t&&t.addEventListener(e,s)}off(t,e,s){t&&t.removeEventListener(e,s)}focusAnswer(){this.answerInput&&(this.answerInput.focus(),this.answerInput.select())}isAnswerFocused(){return document.activeElement===this.answerInput}flash(t){if(!t)return;t.style.transition="background-color 0.3s";const e=t.style.backgroundColor;t.style.backgroundColor="var(--primary-light)",setTimeout(()=>{t.style.backgroundColor=e},300)}updateButtonStates(t,e){this.startBtn.disabled=!t,this.resetBtn.disabled=!e}showSessionSummary(t){const e=`
      Session Complete!
      Questions: ${t.totalQuestions}
      Accuracy: ${t.accuracy}%
      Best Streak: ${t.bestStreak}
      Avg Time: ${t.averageTime}s
    `;this.questionText&&(this.questionText.textContent=e.trim()),this.setGameActive(!1)}showKeyboardShortcuts(){const t=`
      Keyboard Shortcuts:
      Enter - Submit answer / Next question
      Escape - Reset session
      Space - Start/Next (when input not focused)
    `;this.feedback.textContent=t.trim(),this.feedback.className="feedback"}}class I{constructor(t="mathFluencyHighScores"){this.storageKey=t,this.maxScoresPerDuration=10,this.loadScores()}loadScores(){try{const t=localStorage.getItem(this.storageKey);this.scores=t?JSON.parse(t):this.getEmptyScores(),this.validateScores()}catch(t){console.error("Failed to load high scores:",t),this.scores=this.getEmptyScores()}}getEmptyScores(){return{"1min":[],"2min":[],"3min":[],"5min":[]}}validateScores(){["1min","2min","3min","5min"].forEach(e=>{Array.isArray(this.scores[e])||(this.scores[e]=[]),this.scores[e]=this.scores[e].filter(s=>s&&typeof s.name=="string"&&typeof s.score=="number"&&typeof s.questionsAnswered=="number"&&typeof s.accuracy=="number"&&s.date),this.scores[e].sort((s,i)=>i.score-s.score),this.scores[e]=this.scores[e].slice(0,this.maxScoresPerDuration)})}saveScores(){try{return localStorage.setItem(this.storageKey,JSON.stringify(this.scores)),!0}catch(t){return console.error("Failed to save high scores:",t),!1}}addScore(t,e){if(!["1min","2min","3min","5min"].includes(t))throw new Error(`Invalid duration: ${t}`);if(!e.name||typeof e.name!="string")throw new Error("Invalid name");if(typeof e.score!="number"||e.score<0)throw new Error("Invalid score");if(typeof e.questionsAnswered!="number"||e.questionsAnswered<0)throw new Error("Invalid questionsAnswered");if(typeof e.accuracy!="number"||e.accuracy<0||e.accuracy>100)throw new Error("Invalid accuracy");const s={name:e.name.trim(),score:Math.round(e.score),questionsAnswered:e.questionsAnswered,accuracy:Math.round(e.accuracy*10)/10,date:new Date().toISOString(),avgTimePerQuestion:e.avgTimePerQuestion||0};this.scores[t].push(s),this.scores[t].sort((r,n)=>n.score-r.score),this.scores[t]=this.scores[t].slice(0,this.maxScoresPerDuration),this.saveScores();const i=this.scores[t].findIndex(r=>r.name===s.name&&r.score===s.score&&r.date===s.date);return i>=0?i+1:null}getScores(t){if(!["1min","2min","3min","5min"].includes(t))throw new Error(`Invalid duration: ${t}`);return this.scores[t].map(e=>({...e}))}getAllScores(){return{"1min":this.scores["1min"].map(t=>({...t})),"2min":this.scores["2min"].map(t=>({...t})),"3min":this.scores["3min"].map(t=>({...t})),"5min":this.scores["5min"].map(t=>({...t}))}}isHighScore(t,e){var r;if(!["1min","2min","3min","5min"].includes(t))return!1;const s=this.scores[t];if(s.length<this.maxScoresPerDuration)return!0;const i=((r=s[s.length-1])==null?void 0:r.score)||0;return e>i}clearScores(t=null){if(t){if(!["1min","2min","3min","5min"].includes(t))throw new Error(`Invalid duration: ${t}`);this.scores[t]=[]}else this.scores=this.getEmptyScores();this.saveScores()}getTopScore(t){return["1min","2min","3min","5min"].includes(t)&&this.scores[t][0]||null}getPlayerBest(t,e=null){if(!t)return null;const s=t.trim().toLowerCase();if(e)return["1min","2min","3min","5min"].includes(e)&&this.scores[e].find(r=>r.name.toLowerCase()===s)||null;let i=null;return["1min","2min","3min","5min"].forEach(r=>{const n=this.scores[r].find(o=>o.name.toLowerCase()===s);n&&(!i||n.score>i.score)&&(i={...n,duration:r})}),i}exportData(){return{version:"1.0",exportDate:new Date().toISOString(),scores:this.getAllScores()}}importData(t){if(!t||!t.scores)throw new Error("Invalid import data");this.scores=t.scores,this.validateScores(),this.saveScores()}getStatistics(){const t={};return["1min","2min","3min","5min"].forEach(e=>{const s=this.scores[e];s.length===0?t[e]={totalGames:0,topScore:0,avgScore:0,avgAccuracy:0}:t[e]={totalGames:s.length,topScore:s[0].score,avgScore:Math.round(s.reduce((i,r)=>i+r.score,0)/s.length),avgAccuracy:Math.round(s.reduce((i,r)=>i+r.accuracy,0)/s.length*10)/10}}),t}}const p=new I,D=Object.freeze(Object.defineProperty({__proto__:null,HighScores:I,highScores:p},Symbol.toStringTag,{value:"Module"})),S={"1min":6e4,"2min":12e4,"3min":18e4,"5min":3e5},l={IDLE:"idle",READY:"ready",RUNNING:"running",PAUSED:"paused",FINISHED:"finished"};class F{constructor(){this.reset()}reset(){this.state=l.IDLE,this.duration=null,this.startTime=null,this.endTime=null,this.pausedTime=0,this.pauseStartTime=null,this.timeRemaining=0,this.questions=[],this.currentQuestion=null,this.questionStartTime=null,this.score=0,this.correctAnswers=0,this.totalAnswers=0,this.currentStreak=0,this.bestStreak=0,this.updateCallback=null,this.finishCallback=null,this.updateInterval=null}configure(t,e={}){if(!S[t])throw new Error(`Invalid duration: ${t}`);if(this.state!==l.IDLE)throw new Error("Cannot configure sprint while active");return this.duration=t,this.timeRemaining=S[t],this.updateCallback=e.onUpdate||null,this.finishCallback=e.onFinish||null,this.state=l.READY,!0}start(){if(this.state!==l.READY)throw new Error("Sprint not configured or already running");return this.state=l.RUNNING,this.startTime=Date.now(),this.nextQuestion(),this.updateInterval=setInterval(()=>{this.updateTimer()},100),!0}pause(){return this.state!==l.RUNNING?!1:(this.state=l.PAUSED,this.pauseStartTime=Date.now(),this.updateInterval&&(clearInterval(this.updateInterval),this.updateInterval=null),!0)}resume(){return this.state!==l.PAUSED?!1:(this.pausedTime+=Date.now()-this.pauseStartTime,this.pauseStartTime=null,this.state=l.RUNNING,this.updateInterval=setInterval(()=>{this.updateTimer()},100),!0)}stop(){if(this.state===l.IDLE)return!1;this.updateInterval&&(clearInterval(this.updateInterval),this.updateInterval=null);const t=this.state===l.RUNNING;return t&&(this.endTime=Date.now()),this.state=l.FINISHED,t&&this.finishCallback&&this.finishCallback(this.getResults()),!0}nextQuestion(){return this.state!==l.RUNNING?null:(this.currentQuestion=E(),this.questionStartTime=Date.now(),this.currentQuestion)}submitAnswer(t){if(this.state!==l.RUNNING||!this.currentQuestion)return null;const e=Date.now()-this.questionStartTime,s=parseFloat(t)===this.currentQuestion.answer,i={question:this.currentQuestion.question,userAnswer:t,correctAnswer:this.currentQuestion.answer,isCorrect:s,timeElapsed:e,type:this.currentQuestion.type};return this.questions.push(i),this.totalAnswers++,s?(this.correctAnswers++,this.currentStreak++,this.bestStreak=Math.max(this.bestStreak,this.currentStreak),this.score+=1):(this.currentStreak=0,this.score=Math.max(0,this.score-1)),{isCorrect:s,correctAnswer:this.currentQuestion.answer,points:s?1:-1,currentStreak:this.currentStreak,score:this.score}}updateTimer(){if(this.state!==l.RUNNING)return;const e=Date.now()-this.startTime-this.pausedTime;this.timeRemaining=Math.max(0,S[this.duration]-e),this.updateCallback&&this.updateCallback({timeRemaining:this.timeRemaining,score:this.score,questionsAnswered:this.totalAnswers}),this.timeRemaining<=0&&this.stop()}getTimeRemaining(){return this.timeRemaining}getFormattedTime(){const t=Math.ceil(this.timeRemaining/1e3),e=Math.floor(t/60),s=t%60;return`${e}:${s.toString().padStart(2,"0")}`}getProgress(){if(!this.duration)return 0;const t=S[this.duration];return(t-this.timeRemaining)/t*100}getStatistics(){const t=this.totalAnswers>0?Math.round(this.correctAnswers/this.totalAnswers*100):0,e=this.questions.length>0?Math.round(this.questions.reduce((s,i)=>s+i.timeElapsed,0)/this.questions.length):0;return{score:this.score,questionsAnswered:this.totalAnswers,correctAnswers:this.correctAnswers,accuracy:t,currentStreak:this.currentStreak,bestStreak:this.bestStreak,avgTimePerQuestion:e,timeElapsed:this.startTime?(this.endTime||Date.now())-this.startTime-this.pausedTime:0}}getResults(){if(this.state===l.IDLE)return null;const t=this.getStatistics();return{duration:this.duration,score:t.score,questionsAnswered:t.questionsAnswered,correctAnswers:t.correctAnswers,accuracy:t.accuracy,bestStreak:t.bestStreak,avgTimePerQuestion:t.avgTimePerQuestion,timeElapsed:t.timeElapsed,questions:[...this.questions],timestamp:new Date().toISOString()}}isHighScore(){return!this.duration||this.state===l.IDLE?!1:p.isHighScore(this.duration,this.score)}saveHighScore(t){if(!this.duration||!t||this.state===l.IDLE)return null;const e=this.getStatistics();return p.addScore(this.duration,{name:t,score:e.score,questionsAnswered:e.questionsAnswered,accuracy:e.accuracy,avgTimePerQuestion:e.avgTimePerQuestion})}getLeaderboard(){return this.duration?p.getScores(this.duration):[]}getState(){return this.state}isActive(){return this.state===l.RUNNING||this.state===l.PAUSED}canStart(){return this.state===l.READY}exportData(){return{state:this.state,duration:this.duration,statistics:this.getStatistics(),results:this.getResults()}}}const G=new F;class ${constructor(t="https://math-royale-api.adhertz.workers.dev"){this.apiUrl=t,this.playerId=null,this.enabled=!1}async initialize(){try{if(window.location.hostname==="localhost"){let s=localStorage.getItem("math_royale_player_id");return s||(s=crypto.randomUUID(),localStorage.setItem("math_royale_player_id",s)),this.playerId=s,this.enabled=!0,console.log("Connected to global leaderboard (localhost mode)"),!0}const e=await fetch(`${this.apiUrl}/session`,{method:"GET",credentials:"include"});if(e.ok){const s=await e.json();return this.playerId=s.playerId,this.enabled=!0,console.log("Connected to global leaderboard"),!0}}catch(t){console.error("Failed to connect to global leaderboard:",t),this.enabled=!1}return!1}async getLeaderboard(){if(!this.enabled)return null;try{const t=await fetch(`${this.apiUrl}/leaderboard`);if(t.ok)return(await t.json()).scores}catch(t){console.error("Failed to fetch leaderboard:",t)}return null}async submitScore(t,e,s){if(!this.enabled)return null;try{const i=window.location.hostname==="localhost",r={displayName:t,score:e,duration:s};i&&this.playerId&&(r.playerId=this.playerId);const n=await fetch(`${this.apiUrl}/submit-score`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(r)});if(n.ok)return await n.json()}catch(i){console.error("Failed to submit score:",i)}return null}isEnabled(){return this.enabled}formatDuration(t){return{"1min":"1 Minute","2min":"2 Minutes","3min":"3 Minutes","5min":"5 Minutes"}[t]||t}}class U{constructor(t){this.ui=t||new A,this.sprintMode=G,this.isSprintActive=!1,this.selectedDuration=null,this.sharedLeaderboard=new $,this.globalLeaderboardEnabled=!1,this.currentLeaderboardView="local",this.initializeElements(),this.initializeSharedLeaderboard()}async initializeSharedLeaderboard(){const t=await this.sharedLeaderboard.initialize();this.globalLeaderboardEnabled=t,t&&console.log("Global leaderboard enabled")}initializeElements(){const t=typeof document<"u"?document:globalThis.document;t&&(this.sprintBtn=t.getElementById("sprintBtn"),this.sprintSelector=t.getElementById("sprintSelector"),this.cancelSprintBtn=t.getElementById("cancelSprintBtn"),this.sprintTimerSection=t.getElementById("sprintTimerSection"),this.sprintTime=t.getElementById("sprintTime"),this.sprintScore=t.getElementById("sprintScore"),this.sprintProgressBar=t.getElementById("sprintProgressBar"),this.durationBtns=t.querySelectorAll(".sprint-duration-btn"),this.resultsModal=t.getElementById("sprintResultsModal"),this.finalScore=t.getElementById("finalScore"),this.finalQuestions=t.getElementById("finalQuestions"),this.finalAccuracy=t.getElementById("finalAccuracy"),this.finalStreak=t.getElementById("finalStreak"),this.highScoreSection=t.getElementById("highScoreSection"),this.playerNameInput=t.getElementById("playerNameInput"),this.leaderboardList=t.getElementById("leaderboardList"),this.playAgainBtn=t.getElementById("playAgainBtn"),this.closeResultsBtn=t.getElementById("closeResultsBtn"),this.clearScoresBtn=t.getElementById("clearScoresBtn"))}showSprintSelector(){this.sprintSelector&&(this.sprintSelector.style.display="block")}hideSprintSelector(){this.sprintSelector&&(this.sprintSelector.style.display="none")}startSprint(t){this.selectedDuration=t,this.isSprintActive=!0,this.sprintMode.configure(t,{onUpdate:s=>this.updateSprintDisplay(s),onFinish:s=>this.handleSprintFinish(s)}),this.sprintMode.start(),this.sprintTimerSection&&(this.sprintTimerSection.style.display="flex");const e=document.querySelector(".stats-section");return e&&(e.style.display="none"),this.updateButtonStates(),this.sprintMode.currentQuestion}updateSprintDisplay(t){if(this.sprintTime&&(this.sprintTime.textContent=this.sprintMode.getFormattedTime()),this.sprintScore&&(this.sprintScore.textContent=t.score),this.sprintProgressBar){const e=this.sprintMode.getProgress();this.sprintProgressBar.style.width=`${e}%`}}handleSprintFinish(t){this.isSprintActive=!1,this.sprintTimerSection&&(this.sprintTimerSection.style.display="none");const e=document.querySelector(".stats-section");e&&(e.style.display="block"),this.showResults(t)}async showResults(t){var i;if(!this.resultsModal)return;this.lastResults=t,this.finalScore&&(this.finalScore.textContent=t.score),this.finalQuestions&&(this.finalQuestions.textContent=t.questionsAnswered),this.finalAccuracy&&(this.finalAccuracy.textContent=`${t.accuracy}%`),this.finalStreak&&(this.finalStreak.textContent=t.bestStreak);const e=this.sprintMode.isHighScore();let s=!1;if(this.globalLeaderboardEnabled){const r=await this.sharedLeaderboard.getLeaderboard();r&&(s=r.length<10||t.score>(((i=r[9])==null?void 0:i.score)||0))}if(this.highScoreSection){const r=e||s;this.highScoreSection.style.display=r?"block":"none",r&&this.playerNameInput&&(this.playerNameInput.value="",this.playerNameInput.placeholder=s?"Enter name for GLOBAL leaderboard!":"Enter your name",this.playerNameInput.focus())}this.updateLeaderboard(),this.resultsModal.style.display="block"}hideResults(){this.resultsModal&&(this.resultsModal.style.display="none")}async updateLeaderboard(){if(!this.leaderboardList)return;let t=[],e="Local Leaderboard";if(this.currentLeaderboardView==="global"&&this.globalLeaderboardEnabled){const i=await this.sharedLeaderboard.getLeaderboard();i&&(t=i,e="🌍 Global Top 10")}else this.selectedDuration&&(t=this.sprintMode.getLeaderboard(),e="Local Leaderboard");this.leaderboardList.innerHTML="";const s=this.leaderboardList.parentElement.querySelector(".leaderboard-header");if(s&&s.remove(),this.globalLeaderboardEnabled){const i=document.createElement("div");i.className="leaderboard-header",i.style.cssText="display: flex; justify-content: space-between; margin-bottom: 0.5rem;",i.innerHTML=`
        <strong>${e}</strong>
        <button onclick="game.sprint.toggleLeaderboardView()" style="
          background: #4f46e5;
          color: white;
          border: none;
          padding: 0.25rem 0.5rem;
          border-radius: 0.25rem;
          cursor: pointer;
          font-size: 0.875rem;
        ">
          ${this.currentLeaderboardView==="global"?"Show Local":"Show Global"}
        </button>
      `,this.leaderboardList.parentElement.insertBefore(i,this.leaderboardList)}if(this.clearScoresBtn&&(this.clearScoresBtn.style.display=this.currentLeaderboardView==="global"?"none":"block"),t.length===0){this.leaderboardList.innerHTML="<li>No scores yet!</li>";return}t.slice(0,10).forEach((i,r)=>{const n=document.createElement("li"),o=i.displayName||i.name;n.innerHTML=`
        <span>${r+1}. ${o}</span>
        <span>${i.score} pts</span>
      `,this.leaderboardList.appendChild(n)})}toggleLeaderboardView(){this.currentLeaderboardView=this.currentLeaderboardView==="local"?"global":"local",this.updateLeaderboard()}async saveHighScore(){if(!this.playerNameInput||!this.playerNameInput.value.trim())return!1;const t=this.playerNameInput.value.trim(),e=this.sprintMode.saveHighScore(t);let s=null;if(this.globalLeaderboardEnabled&&this.lastResults){const i=await this.sharedLeaderboard.submitScore(t,this.lastResults.score,this.selectedDuration);i&&i.success&&(s=i.rank,this.currentLeaderboardView="global")}return this.updateLeaderboard(),this.highScoreSection&&(this.highScoreSection.style.display="none"),s?(this.ui.showFeedback(!0,null),this.ui.feedback.textContent=`🌍 Global Rank #${s}!`):e===1?(this.ui.showFeedback(!0,null),this.ui.feedback.textContent="🏆 New #1 High Score!"):e&&(this.ui.showFeedback(!0,null),this.ui.feedback.textContent=`🎉 Ranked #${e} on the leaderboard!`),e||s}stopSprint(){if(this.isSprintActive){this.sprintMode.stop(),this.isSprintActive=!1,this.sprintTimerSection&&(this.sprintTimerSection.style.display="none");const t=document.querySelector(".stats-section");t&&(t.style.display="block"),this.updateButtonStates()}}resetSprint(){this.sprintMode.reset(),this.isSprintActive=!1,this.selectedDuration=null,this.hideSprintSelector(),this.hideResults(),this.sprintTimerSection&&(this.sprintTimerSection.style.display="none"),this.sprintProgressBar&&(this.sprintProgressBar.style.width="0%")}updateButtonStates(){this.sprintBtn&&(this.sprintBtn.disabled=this.isSprintActive)}isActive(){return this.isSprintActive}getCurrentQuestion(){return this.sprintMode.currentQuestion}submitAnswer(t){return this.sprintMode.submitAnswer(t)}nextQuestion(){return this.sprintMode.nextQuestion()}clearCurrentDurationScores(){this.selectedDuration&&(p.clearScores(this.selectedDuration),this.updateLeaderboard(),this.ui&&this.ui.feedback&&(this.ui.showFeedback(!0,null),this.ui.feedback.textContent="High scores cleared!"))}}class _{constructor(){this.ui=new A,this.session=R,this.sprint=new U(this.ui),this.currentQuestion=null,this.isWaitingForNext=!1,this.mode="practice",this.initializeEventListeners()}initializeEventListeners(){this.ui.on(this.ui.startBtn,"click",()=>this.handleStartNext()),this.ui.on(this.ui.resetBtn,"click",()=>this.handleReset()),this.ui.on(this.ui.answerInput,"keydown",t=>{t.key==="Enter"&&(t.preventDefault(),this.handleAnswerSubmit())}),document.addEventListener("keydown",t=>{t.key==="Escape"&&this.handleReset(),t.key===" "&&!this.ui.isAnswerFocused()&&(t.preventDefault(),this.handleStartNext()),t.key==="?"&&!this.ui.isAnswerFocused()&&this.ui.showKeyboardShortcuts()}),this.initializeSprintListeners()}initializeSprintListeners(){const t=document.getElementById("sprintBtn");t&&t.addEventListener("click",()=>this.startSprintMode("1min"));const e=document.getElementById("cancelSprintBtn");e&&e.addEventListener("click",()=>this.hideSprintSelector()),document.querySelectorAll(".sprint-duration-btn").forEach(u=>{u.addEventListener("click",c=>{const m=c.target.dataset.duration;this.startSprintMode(m)})});const i=document.getElementById("playAgainBtn");i&&i.addEventListener("click",()=>{this.sprint.hideResults();const u=this.sprint.selectedDuration;this.sprint.resetSprint(),this.startSprintMode(u)});const r=document.getElementById("closeResultsBtn");r&&r.addEventListener("click",()=>{this.sprint.hideResults(),this.sprint.resetSprint(),this.mode="practice",this.ui.reset()});const n=document.getElementById("playerNameInput");n&&n.addEventListener("keydown",u=>{u.key==="Enter"&&(u.preventDefault(),this.sprint.saveHighScore())});const o=document.getElementById("clearScoresBtn");o&&o.addEventListener("click",()=>{confirm("Are you sure you want to clear all high scores for this duration?")&&this.sprint.clearCurrentDurationScores()})}showSprintSelector(){this.session.isSessionActive()&&this.session.pause(),this.sprint.showSprintSelector()}hideSprintSelector(){this.sprint.hideSprintSelector(),this.session.isPaused()&&this.session.resume()}startSprintMode(t){this.session.isSessionActive()&&this.session.end(),this.sprint.hideSprintSelector(),this.mode="sprint",this.isWaitingForNext=!1;const e=this.sprint.startSprint(t);this.currentQuestion=e,this.ui.displayQuestion(e),this.ui.setGameActive(!0),this.ui.startBtn.textContent="Sprint Active",this.ui.startBtn.disabled=!0,this.ui.resetBtn.textContent="Stop Sprint"}handleStartNext(){this.session.isSessionActive()?this.nextQuestion():this.startGame()}startGame(){this.session.start(),this.ui.setGameActive(!0),this.isWaitingForNext=!1,this.nextQuestion()}nextQuestion(){this.ui.clearAnswer(),this.currentQuestion=E(),this.session.startQuestion(this.currentQuestion),this.ui.displayQuestion(this.currentQuestion),this.updateStats(),this.isWaitingForNext=!1}handleAnswerSubmit(){if(!this.currentQuestion||this.isWaitingForNext)return;const t=this.ui.getAnswer();if(!t)return;let e;if(this.mode==="sprint"){if(e=this.sprint.submitAnswer(t),!e)return;this.ui.showFeedback(e.isCorrect,e.correctAnswer),setTimeout(()=>{if(this.sprint.isActive()){const s=this.sprint.nextQuestion();s&&(this.currentQuestion=s,this.ui.displayQuestion(s))}},100)}else e=this.session.submitAnswer(t),this.ui.showFeedback(e.isCorrect,e.correctAnswer),this.updateStats(),this.isWaitingForNext=!0,setTimeout(()=>{this.session.isSessionActive()&&this.nextQuestion()},100)}handleReset(){if(this.mode==="sprint"){confirm("Stop the current sprint?")&&(this.sprint.stopSprint(),this.mode="practice",this.resetGame(),this.ui.resetBtn.textContent="Reset Session");return}if(this.session.questions.length>5){const e=this.session.getStatistics();if(!confirm(`Reset session? You've answered ${e.totalQuestions} questions with ${e.accuracy}% accuracy.`))return}const t=this.session.end();t.totalQuestions>0?(this.ui.showSessionSummary(t),setTimeout(()=>{this.resetGame()},3e3)):this.resetGame()}resetGame(){this.session.reset(),this.ui.reset(),this.currentQuestion=null,this.isWaitingForNext=!1}updateStats(){const t=this.session.getStatistics();this.ui.updateStatistics(t)}checkPerformance(){const t=this.session.getPerformanceTrend();t&&(t.trend==="improving"&&t.recentAccuracy>90?(this.ui.showFeedback(!0,null),this.ui.feedback.textContent="🚀 Great progress! You're on fire!"):t.trend==="declining"&&t.recentAccuracy<50&&(this.ui.feedback.textContent="💡 Take your time, focus on accuracy",this.ui.feedback.className="feedback"))}saveProgress(){const t=this.session.exportData();localStorage.setItem("mathFluencyProgress",JSON.stringify(t))}loadProgress(){const t=localStorage.getItem("mathFluencyProgress");if(t)try{const e=JSON.parse(t);return this.session.importData(e),this.updateStats(),this.ui.setGameActive(this.session.isSessionActive()),!0}catch(e){console.error("Failed to load progress:",e)}return!1}}function k(){const a=document.querySelector('script[type="module"]:not([src])');a&&a.remove();const t=new _;window.game=t,window.clearAllScores=async()=>{if(confirm("This will clear ALL high scores across all durations. Are you sure?")){const{highScores:e}=await x(async()=>{const{highScores:s}=await Promise.resolve().then(()=>D);return{highScores:s}},void 0);return e.clearScores(),console.log("All high scores cleared!"),"All scores cleared"}return"Cancelled"},console.log("Developer commands available:"),console.log("- clearAllScores() : Clear all high scores"),console.log("- game : Access game instance"),t.loadProgress()&&console.log("Previous session restored"),setInterval(()=>{t.session.isSessionActive()&&t.saveProgress()},3e4),window.addEventListener("beforeunload",()=>{t.session.isSessionActive()&&t.saveProgress()}),console.log("Math Royale initialized! Press Start to begin.")}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",k):k();
//# sourceMappingURL=index-BaUkmgYr.js.map
